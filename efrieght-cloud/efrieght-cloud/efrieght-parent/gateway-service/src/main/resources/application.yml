server:
  port: 8085
  shutdown: graceful
spring:
  lifecycle:
    timeout-per-shutdown-phase: 20
  application:
    name: gateway-service
#  cloud:
#    config:
#      uri: http://localhost:8088
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      default-filters:
      - JwtFilter
      routes:
      - id: user-service
        uri: lb://user-service
        predicates:
        - Path=/user/**
        filters:
        - RewritePath=/user-service/(?<path>.*), /$\{path}
#      - id: openapi
#        uri: http://localhost:${server.port}
#        predicates:
#        - Path=/v3/api-docs/user
#        filters:
#        - RewritePath=/v3/api-docs/user, /user/v3/api-docs
      - id: client-service
        uri: lb://client-service
        predicates:
        - Path=/client/**
        filters:
        - RewritePath=/client-service/(?<path>.*), /$\{path}
      - id: mdm-service
        uri: lb://mdm-service
        predicates:
        - Path=/mdm/**
        filters:
        - RewritePath=/mdm-service/(?<path>.*), /$\{path}
      - id: audit-service
        uri: lb://audit-service
        predicates:
        - Path=/audit/**
        filters:
        - RewritePath=/mdm-service/(?<path>.*), /$\{path}
      - id: account-service
        uri: lb://account-service
        predicates:
        - Path=/account/**
        filters:
        - RewritePath=/account-service/(?<path>.*), /$\{path}  
      globalcors:
        cors-configurations:
          '[/**]':
              allowed-origins:
              - '*'
              - 'http://localhost:4200'
              allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              allowed-headers:
                - '*'
              allow-credentials: true  
#  security:
#    oauth2:
#      client:
#        provider:
#          keycloak:
#            token-uri: http://localhost:18080/auth/realms/efrieght/protocol/openid-connect/token
#            authorization-uri: http://localhost:18080/auth/realms/efrieght/protocol/openid-connect/auth
#            user-info-uri: http://localhost:18080/auth/realms/efrieght/protocol/openid-connect/userinfo
#            #userinfo-uri: http://localhost:18080/auth/realms/master/protocol/openid-connect/userinfo
#            user-name-attribute: preferred_username
#        registration:
#          efrieght-web-client:
#            provider: keycloak
#            client-id: efrieght-web-client
#            client-secret: 19e84b16-7bc7-4538-8198-8aa79f9060b9
#            authorization-grant-type: authorization_code
#            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
#springdoc:
#  packagesToScan: com.grt.elogfrieght.services
eureka:
  instance:
    prefer-ip-address: true
    hostname: localhost:8085
  client:
    registerWithEureka: true
    fetchRegistry: true
    registryFetchIntervalSeconds: 1
    serviceUrl:
      defaultZone: http://localhost:8061/eureka/
logging:
  pattern: 
#    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
     console: '%d{yyyy-MMM-dd HH:mm:ss.SSS} [%thread]  %highlight(%-5level) [%12.12thread] %cyan(%-40.40logger{40}) : %msg %n'
  level:
    root: info
    '[org.springframework]': debug
    '[com.grt]': debug
    '[com.grtship]': debug
    '[com]': debug    
    '[org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator]': error
    '[org.springframework.cloud.gateway]': debug
    '[reactor.netty.http.client]': error
    '[com.netflix.discovery]': off
    '[com.netflix.discovery.shared.transport.jersey.Jersey1DiscoveryClientOptionalArgs]': off
    '[org.springframework.web.cors]': debug
jwt:
  accesstoken:
    publicKey : MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuNvHsiOIGmTsJVyPbR/fym6XwHBuQxNYuU6zLF+hnoGbf45aFS6vaGIPmZ85SO08VrojXWpcga9YdPa3EAdFnUEFOi7LPJnyHslmwJt40WiVhFU57ju9AeTVlNAWoyYw9sACCQmyex6NC67TteTWm0yQLWz+6gegB8LDOpCD/lKe3pH8FIPbftdG0cKmWbQbcYhdDlhTB8mrUlrJgW2PCfW2LS1hyA3HtBUO1+qekDNtUQ/D4wqFQ4E1m/YjTKBVWPQDalZyMHF55m2HA9VPh/jEWKFYHMXGZgDUhvP/zmb9MaT1nfQsfRKUv5TOBwcooh3HLm3CWwT+ahWTR6eQbQIDAQAB
    expiryTime : 60000
  refreshtoken:
    publicKey : MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuNvHsiOIGmTsJVyPbR/fym6XwHBuQxNYuU6zLF+hnoGbf45aFS6vaGIPmZ85SO08VrojXWpcga9YdPa3EAdFnUEFOi7LPJnyHslmwJt40WiVhFU57ju9AeTVlNAWoyYw9sACCQmyex6NC67TteTWm0yQLWz+6gegB8LDOpCD/lKe3pH8FIPbftdG0cKmWbQbcYhdDlhTB8mrUlrJgW2PCfW2LS1hyA3HtBUO1+qekDNtUQ/D4wqFQ4E1m/YjTKBVWPQDalZyMHF55m2HA9VPh/jEWKFYHMXGZgDUhvP/zmb9MaT1nfQsfRKUv5TOBwcooh3HLm3CWwT+ahWTR6eQbQIDAQAB
    expiryTime : 60000